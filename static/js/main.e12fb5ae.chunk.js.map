{"version":3,"sources":["components/Jumbotron.js","components/SearchInput.js","components/EmployeeTable.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","className","SearchInput","props","type","onClick","handleFormSubmit","id","onChange","handleInputChange","value","search","name","aria-label","aria-describedby","placeholder","scope","employees","filter","employee","first","last","toUpperCase","includes","map","i","src","picture","medium","alt","cell","email","Date","dob","date","toLocaleDateString","age","axios","get","App","state","fetchAllEmployees","API","then","res","setState","data","results","catch","err","console","log","event","target","emps","sort","a","b","this","EmployeeTable","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e12fb5ae.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid bg-dark text-light border-bottom border-primary\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4 text-center\">Employee Directory</h1>\r\n        <p className=\"lead text-center\">\r\n          Click on carrots to filter by heading or use the search box to narrow\r\n          your results.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Jumbotron;\r\n","import React from \"react\";\n\nfunction SearchInput(props) {\n  return (\n    <div className=\"p-5 col-lg-3 mx-auto input-group input-group-lg\">\n      <div type=\"button\" className=\"input-group-prepend\">\n        <button\n          onClick={props.handleFormSubmit}\n          className=\"btn btn-outline-secondary\"\n          type=\"button\"\n          id=\"button-addon1\"\n        >\n          Sort By Age\n        </button>\n      </div>\n      <input\n        onChange={props.handleInputChange}\n        value={props.search}\n        name=\"search\"\n        type=\"text\"\n        className=\"form-control\"\n        aria-label=\"Sizing example input\"\n        aria-describedby=\"inputGroup-sizing-lg\"\n        placeholder=\"Search Employee\"\n      ></input>\n    </div>\n  );\n}\n\nexport default SearchInput;\n","import React from \"react\";\r\n\r\nfunction Jumbotron(props) {\r\n  return (\r\n    <div className=\"container-fluid \">\r\n      <table className=\"m-4 table mx-auto\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Image</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Phone</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">DOB</th>\r\n            <th scope=\"col\" onClick={props.handleFormSubmit}>\r\n              Age\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.employees\r\n            ?.filter((employee) =>\r\n              `${employee.name.first} ${employee.name.last}`\r\n                .toUpperCase()\r\n                .includes(props.search.toUpperCase())\r\n            )\r\n            .map((employee, i) => (\r\n              <tr>\r\n                <th scope=\"row\">\r\n                  <img src={employee.picture.medium} alt={\"employee\" + i}></img>\r\n                </th>\r\n                <td>{`${employee.name.first} ${employee.name.last}`}</td>\r\n                <td>{employee.cell}</td>\r\n                <td>{employee.email}</td>\r\n                <td>{new Date(employee.dob.date).toLocaleDateString()}</td>\r\n                <td>{employee.dob.age}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default Jumbotron;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  getUsers: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=500&nat=us\");\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport SearchInput from \"./components/SearchInput\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport API from \"./utils/API\";\n\nclass App extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n  };\n\n  componentDidMount() {\n    this.fetchAllEmployees();\n  }\n\n  fetchAllEmployees = () => {\n    API.getUsers()\n      .then((res) => this.setState({ employees: res.data.results }))\n      .catch((err) => console.log(err));\n  };\n\n  handleInputChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    const emps = [...this.state.employees];\n    emps.sort((a, b) => a.dob.age - b.dob.age);\n    this.setState({ employees: emps });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <Jumbotron />\n        <SearchInput\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <EmployeeTable\n          employees={this.state.employees}\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}